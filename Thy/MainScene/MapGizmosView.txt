local table_insert = table.insert

---@class MapGizmosView
local MapGizmosView = {}
MapGizmosView.args = {}
local args = MapGizmosView.args

---相机画矩形方法
---@param cameraGizmos GizmosUtil
---@param height number
---@param width number
function MapGizmosView:ChangeCameraBox(cameraGizmos, height, width)
    cameraGizmos:ChangeBox(height, width)
end

---相机画线方法
---@param cameraGizmos GizmosUtil
---@param minPosX number
---@param maxPosX number
---@param minPosY number
---@param maxPosY number
function MapGizmosView:SetCameraLine(cameraGizmos, minPosX, maxPosX, minPosY, maxPosY)
    cameraGizmos:SetLine(minPosX, maxPosX, minPosY, maxPosY)
end

---区域画线方法
---@param areaIndex number
---@param minPosX number
---@param maxPosX number
---@param minPosY number
---@param maxPosY number
function MapGizmosView:SetAreaLine(areaIndex, minPosX, maxPosX, minPosY, maxPosY)
    if not args then
        return 
    end

    -- 最终区域（可移动范围）
    if areaIndex == 10000 then
        ---@type GizmosUtil
        local finalAreaGizmos = args.FinalAreaGizmos
        finalAreaGizmos:SetLine(minPosX, maxPosX, minPosY, maxPosY)
        return 
    end

    -- 实际区域
    if areaIndex < 100 then
        ---@type GizmosUtil
        local gizmos = args["Area_" .. areaIndex .. "_Gizmos"]
        if gizmos then
            gizmos:SetLine(minPosX, maxPosX, minPosY, maxPosY)
        end
        return 
    end

    -- 扩展后的区域
    if areaIndex > 100 then
        ---@type GizmosUtil
        local gizmos = args["Gizmos_" .. (areaIndex - 100) .. "_Extend"]
        if gizmos then
            gizmos:SetLine(minPosX, maxPosX, minPosY, maxPosY)
        end
        return 
    end
end
return MapGizmosView
